local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Dead Rails || Flandre Hub Premium",
   Icon = 125307995960610, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Welcome to Flandre Hub",
   LoadingSubtitle = "Script Make By 54hz",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "flandrehub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Flandre Hub",
      Subtitle = "Key Stytems",
      Note = "to get key,chat to my bot in discord :nhm_roblox", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"b8d83ed2e0bbf2e4f45aa3c0166816dc"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

Rayfield:Notify({
   Title = "thanks for buy script",
   Content = "discord:https://discord.gg/NtakBUPbkW",
   Duration = 6.5,
   Image = 4483362458,
})

local Tab = Window:CreateTab("Mainü§î", 4483362458) -- Title, Image

local Divider = Tab:CreateDivider()

local Button = Tab:CreateButton({
   Name = "ESP ITEM",
   Callback = function()
-- T·∫°o GUI cho ESP Item
local screenGui = game:GetService("CoreGui"):FindFirstChild("ESP_Item_GUI") or Instance.new("ScreenGui")
screenGui.Name = "ESP_Item_GUI"
screenGui.Parent = game:GetService("CoreGui")

local buttonESP = Instance.new("TextButton")
buttonESP.Name = "ESP Item: ON/OFF"
buttonESP.Size = UDim2.new(0, 150, 0, 50)
buttonESP.Position = UDim2.new(0.5, -75, 0.8, -25) -- V·ªã tr√≠ d∆∞·ªõi NPC Lock
buttonESP.BackgroundColor3 = Color3.new(0, 0, 0)
buttonESP.TextColor3 = Color3.new(1, 1, 1)
buttonESP.Text = "ESP Item: OFF"
buttonESP.Font = Enum.Font.Fantasy
buttonESP.TextScaled = true
buttonESP.Parent = screenGui

local uicorner = Instance.new("UICorner")
uicorner.CornerRadius = UDim.new(0, 12)
uicorner.Parent = buttonESP

-- Bi·∫øn l∆∞u tr·∫°ng th√°i ESP
getgenv().ESPEnabled = false
local espObjects = {}

local function clearESP()
    for _, esp in pairs(espObjects) do
        if esp and esp.Parent then
            esp:Destroy()
        end
    end
    espObjects = {}
end

local function createESP(obj)
    if obj:FindFirstChild("ObjectInfo") and not obj:FindFirstChild("HumanoidRootPart") then
        local highlight = Instance.new("Highlight")
        highlight.Parent = obj
        highlight.FillColor = Color3.new(1, 1, 1)
        highlight.OutlineColor = Color3.new(1, 1, 1)
        highlight.FillTransparency = 0.5
        highlight.OutlineTransparency = 0

        local billboard = Instance.new("BillboardGui")
        billboard.Parent = obj
        billboard.Size = UDim2.new(0, 100, 0, 20)
        billboard.StudsOffset = Vector3.new(0, 3, 0)
        billboard.AlwaysOnTop = true

        local textLabel = Instance.new("TextLabel")
        textLabel.Parent = billboard
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.Text = obj.Name
        textLabel.TextColor3 = Color3.new(1, 1, 1)
        textLabel.TextSize = 10
        textLabel.Font = Enum.Font.SourceSansBold

        local adorneePart = obj:FindFirstChildWhichIsA("BasePart")
        if adorneePart then
            billboard.Adornee = adorneePart
        else
            billboard:Destroy()
        end

        table.insert(espObjects, highlight)
        table.insert(espObjects, billboard)
    end
end

local function updateESP()
    while getgenv().ESPEnabled do
        clearESP()
        for _, obj in pairs(workspace:GetDescendants()) do
            if obj:IsA("Model") then
                createESP(obj)
            end
        end
        task.wait(0.2)
    end
    clearESP()
end

buttonESP.MouseButton1Click:Connect(function()
    getgenv().ESPEnabled = not getgenv().ESPEnabled
    buttonESP.Text = getgenv().ESPEnabled and "ESP Item: ON" or "ESP Item: OFF"

    if getgenv().ESPEnabled then
        task.spawn(updateESP)
    end
end)

})

local Button = Tab:CreateButton({
   Name = "ESP NPC",
   Callback = function()
-- T·∫°o GUI cho ESP NPC
local screenGui = game:GetService("CoreGui"):FindFirstChild("ESP_NPC_GUI") or Instance.new("ScreenGui")
screenGui.Name = "ESP_NPC_GUI"
screenGui.Parent = game:GetService("CoreGui")

local buttonESP = Instance.new("TextButton")
buttonESP.Name = "ESP NPC: ON/OFF"
buttonESP.Size = UDim2.new(0, 150, 0, 50)
buttonESP.Position = UDim2.new(0.5, -75, 0.7, -25) -- V·ªã tr√≠ d∆∞·ªõi ESP Item
buttonESP.BackgroundColor3 = Color3.new(0, 0, 0)
buttonESP.TextColor3 = Color3.new(1, 1, 1)
buttonESP.Text = "ESP NPC: OFF"
buttonESP.Font = Enum.Font.Fantasy
buttonESP.TextScaled = true
buttonESP.Parent = screenGui

local uicorner = Instance.new("UICorner")
uicorner.CornerRadius = UDim.new(0, 12)
uicorner.Parent = buttonESP

-- Bi·∫øn l∆∞u tr·∫°ng th√°i ESP
getgenv().ESPEnabled = false
local espObjects = {}

local function clearESP()
    for _, esp in pairs(espObjects) do
        if esp and esp.Parent then
            esp:Destroy()
        end
    end
    espObjects = {}
end

local function createESP(obj)
    if obj:FindFirstChild("HumanoidRootPart") and obj:FindFirstChild("Humanoid") then
        local dangerousMobs = {
            "Vampire", "Werewolf", 
            "RifleOutlaw", "ShotgunOutlaw", "RevolverOutlaw"
        }

        local highlightColor, textColor

        if table.find(dangerousMobs, obj.Name) then
            highlightColor = Color3.fromRGB(255, 0, 0) -- ƒê·ªè
            textColor = Color3.fromRGB(255, 0, 0) -- ƒê·ªè
        elseif obj.Name == "Banker" then
            highlightColor = Color3.fromRGB(255, 255, 0) -- V√†ng
            textColor = Color3.fromRGB(255, 255, 0) -- V√†ng
        else
            highlightColor = Color3.fromRGB(0, 255, 0) -- Xanh l√°
            textColor = Color3.fromRGB(0, 255, 0) -- Xanh l√°
        end

        local highlight = Instance.new("Highlight")
        highlight.Parent = obj
        highlight.FillColor = highlightColor
        highlight.OutlineColor = highlightColor
        highlight.FillTransparency = 0.5
        highlight.OutlineTransparency = 0

        local billboard = Instance.new("BillboardGui")
        billboard.Parent = obj.HumanoidRootPart
        billboard.Adornee = obj.HumanoidRootPart
        billboard.Size = UDim2.new(0, 100, 0, 25)
        billboard.StudsOffset = Vector3.new(0, 3, 0)
        billboard.AlwaysOnTop = true

        local textLabel = Instance.new("TextLabel")
        textLabel.Parent = billboard
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.Text = obj.Name
        textLabel.TextColor3 = textColor
        textLabel.TextSize = 14
        textLabel.Font = Enum.Font.SourceSansBold

        table.insert(espObjects, highlight)
        table.insert(espObjects, billboard)
    end
end

local function updateESP()
    while getgenv().ESPEnabled do
        clearESP()
        for _, obj in pairs(workspace:GetDescendants()) do
            if obj:IsA("Model") and obj:FindFirstChild("Humanoid") then
                createESP(obj)
            end
        end
        task.wait(0.2)
    end
    clearESP()
end

buttonESP.MouseButton1Click:Connect(function()
    getgenv().ESPEnabled = not getgenv().ESPEnabled
    buttonESP.Text = getgenv().ESPEnabled and "ESP NPC: ON" or "ESP NPC: OFF"

    if getgenv().ESPEnabled then
        task.spawn(updateESP)
    end
end)

})

local Button = Tab:CreateButton({
   Name = "NPC HITBOX",
   Callback = function()
-- T·∫°o GUI cho NPC Hitbox
local screenGui = game:GetService("CoreGui"):FindFirstChild("NPC_HITBOX_GUI") or Instance.new("ScreenGui")
screenGui.Name = "NPC_HITBOX_GUI"
screenGui.Parent = game:GetService("CoreGui")

local buttonHitbox = Instance.new("TextButton")
buttonHitbox.Name = "NPC HITBOX: ON/OFF"
buttonHitbox.Size = UDim2.new(0, 150, 0, 50)
buttonHitbox.Position = UDim2.new(0.5, -75, 0.8, -25) -- V·ªã tr√≠ d∆∞·ªõi ESP NPC
buttonHitbox.BackgroundColor3 = Color3.new(0, 0, 0)
buttonHitbox.TextColor3 = Color3.new(1, 1, 1)
buttonHitbox.Text = "NPC HITBOX: OFF"
buttonHitbox.Font = Enum.Font.Fantasy
buttonHitbox.TextScaled = true
buttonHitbox.Parent = screenGui

local uicorner = Instance.new("UICorner")
uicorner.CornerRadius = UDim.new(0, 12)
uicorner.Parent = buttonHitbox

-- Bi·∫øn l∆∞u tr·∫°ng th√°i Hitbox
getgenv().hitboxEnabled = false

-- H√†m c·∫≠p nh·∫≠t hitbox cho NPC
local function updateNPCHitbox(npc)
    if npc:IsA("Model") and npc:FindFirstChild("HumanoidRootPart") and npc:FindFirstChild("Humanoid") then
        local hrp = npc.HumanoidRootPart
        if getgenv().hitboxEnabled then
            hrp.Size = Vector3.new(10, 10, 10) -- M·ªü r·ªông hitbox
            hrp.Transparency = 0.85
            hrp.CanCollide = false
        else
            hrp.Size = Vector3.new(2, 2, 1) -- K√≠ch th∆∞·ªõc g·ªëc
            hrp.Transparency = 0
            hrp.CanCollide = true
        end
    end
end

-- C·∫≠p nh·∫≠t t·∫•t c·∫£ NPC hi·ªán c√≥
local function updateAllNPCsHitbox()
    for _, obj in ipairs(workspace:GetDescendants()) do
        updateNPCHitbox(obj)
    end
end

-- Khi c√≥ NPC m·ªõi xu·∫•t hi·ªán, t·ª± ƒë·ªông c·∫≠p nh·∫≠t hitbox
workspace.DescendantAdded:Connect(function(obj)
    updateNPCHitbox(obj)
end)

-- Li√™n t·ª•c ki·ªÉm tra v√† c·∫≠p nh·∫≠t hitbox
spawn(function()
    while true do
        if getgenv().hitboxEnabled then
            updateAllNPCsHitbox()
        end
        wait(1)
    end
end)

-- N√∫t b·∫≠t/t·∫Øt Hitbox
buttonHitbox.MouseButton1Click:Connect(function()
    getgenv().hitboxEnabled = not getgenv().hitboxEnabled
    buttonHitbox.Text = getgenv().hitboxEnabled and "NPC HITBOX: ON" or "NPC HITBOX: OFF"
    updateAllNPCsHitbox()
end)

})

local Button = Tab:CreateButton({
   Name = "AIMBOT V3",
   Callback = function()
--dead rails wall hack aimbot.
local Players = game:GetService("Players")
local player = Players.LocalPlayer
player.CameraMode = Enum.CameraMode.Classic
local runService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local camera = workspace.CurrentCamera

StarterGui:SetCore("SendNotification", {
    Title = "Code by GioBolqvi", -- dont skid √∞≈∏‚Ñ¢¬è√∞≈∏‚Äô‚Äù
    Text = "on Roblox",
    Duration = 3
})

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "NPC_Lock_GUI"
screenGui.Parent = game:GetService("CoreGui")

local button = Instance.new("TextButton")
button.Name = "NPC Lock: ON/OFF"
button.Size = UDim2.new(0, 150, 0, 50)
button.Position = UDim2.new(0.5, -75, 0.9, -25)
button.BackgroundColor3 = Color3.new(0, 0, 0)
button.TextColor3 = Color3.new(1, 1, 1)
button.Text = "NPC Lock: OFF"
button.Font = Enum.Font.Fantasy
button.TextScaled = true
button.TextSize = 20
button.Parent = screenGui

local uicorner = Instance.new("UICorner")
uicorner.CornerRadius = UDim.new(0, 12)
uicorner.Parent = button

local dragging = false
local dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    button.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

button.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = button.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

button.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        update(input)
    end
end)

local npcLock = false
local lastTarget = nil
local toggleLoop

local function addPlayerHighlight()
    if player.Character then
        local highlight = player.Character:FindFirstChild("PlayerHighlightESP")
        if not highlight then
            highlight = Instance.new("Highlight")
            highlight.Name = "PlayerHighlightESP"
            highlight.FillColor = Color3.new(1, 1, 1)
            highlight.OutlineColor = Color3.new(1, 1, 1)
            highlight.FillTransparency = 0.5
            highlight.OutlineTransparency = 0
            highlight.Parent = player.Character
        end
    end
end

local function removePlayerHighlight()
    if player.Character and player.Character:FindFirstChild("PlayerHighlightESP") then
        player.Character.PlayerHighlightESP:Destroy()
    end
end

local function getClosestNPC()
    local closestNPC = nil
    local closestDistance = math.huge

    for _, object in ipairs(workspace:GetDescendants()) do
        if object:IsA("Model") then
            local humanoid = object:FindFirstChild("Humanoid") or object:FindFirstChildWhichIsA("Humanoid")
            local hrp = object:FindFirstChild("HumanoidRootPart") or object.PrimaryPart
            if humanoid and hrp and humanoid.Health > 0 and object.Name ~= "Horse" then
                local isPlayer = false
                for _, pl in ipairs(Players:GetPlayers()) do
                    if pl.Character == object then
                        isPlayer = true
                        break
                    end
                end
                if not isPlayer then
                    local distance = (hrp.Position - player.Character.HumanoidRootPart.Position).Magnitude
                    if distance < closestDistance then
                        closestDistance = distance
                        closestNPC = object
                    end
                end
            end
        end
    end

    return closestNPC
end

button.MouseButton1Click:Connect(function()
    npcLock = not npcLock
    if npcLock then
        button.Text = "NPC Lock: ON"
        toggleLoop = runService.RenderStepped:Connect(function()
            local npc = getClosestNPC()
            if npc and npc:FindFirstChild("Humanoid") then
                local npcHumanoid = npc:FindFirstChild("Humanoid")
                if npcHumanoid.Health > 0 then
                    camera.CameraSubject = npcHumanoid
                    lastTarget = npc
                    addPlayerHighlight()
                else
                    StarterGui:SetCore("SendNotification", {
                        Title = "Killed NPC",
                        Text = npc.Name,
                        Duration = 0.4
                    })
                    lastTarget = nil
                    removePlayerHighlight()
                    if player.Character and player.Character:FindFirstChild("Humanoid") then
                        camera.CameraSubject = player.Character:FindFirstChild("Humanoid")
                    end
                end
            else
                if player.Character and player.Character:FindFirstChild("Humanoid") then
                    camera.CameraSubject = player.Character:FindFirstChild("Humanoid")
                end
                lastTarget = nil
                removePlayerHighlight()
            end
        end)
    else
        button.Text = "NPC Lock: OFF"
        if toggleLoop then
            toggleLoop:Disconnect()
            toggleLoop = nil
        end
        removePlayerHighlight()
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            camera.CameraSubject = player.Character:FindFirstChild("Humanoid")
        end
    end
end)

   -- The function that takes place when the button is pressed
   end,
})

local Button = Tab:CreateButton({
   Name = "script l√†m b·ªüi 54hz,script make by 54hz",
   Callback = function()
   -- The function that takes place when the button is pressed
   end,
})
